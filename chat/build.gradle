plugins { 
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'java'
}

dependencies {
    implementation project(':shared')
    implementation project(':common')
    
    // Web / WebSocket
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // JSON
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Resilience4j
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.2.0'

    // Async/AOP (스프링 기본 포함되지만, 실행기 커스터마이징 시 필요)
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // 데이터베이스
    runtimeOnly 'org.postgresql:postgresql:42.7.4'
    implementation 'org.flywaydb:flyway-core:10.8.1'
    
    // 모니터링
    implementation 'io.micrometer:micrometer-registry-prometheus'
    
    // SpringDoc OpenAPI (Swagger)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    
    // 테스트
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
    
    // 테스트 실행 시 인코딩 설정
    test {
        systemProperty 'file.encoding', 'UTF-8'
        systemProperty 'console.encoding', 'UTF-8'
        systemProperty 'user.language', 'ko'
        systemProperty 'user.country', 'KR'
    }
    
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

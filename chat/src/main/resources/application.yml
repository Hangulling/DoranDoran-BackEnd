server:
  port: 8083

spring:
  application:
    name: chat-service
  
  # Chat 서비스 공유 데이터베이스 설정
  datasource:
    url: jdbc:postgresql://localhost:5432/dorandoran
    username: doran
    password: doran
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
  
  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: update
      default_schema: chat_schema
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        connection:
          characterEncoding: UTF-8
          useUnicode: true
        jdbc:
          time_zone: UTC
        # billing 스키마 접근을 위한 추가 설정
        default_schema: chat_schema
    database-platform: org.hibernate.dialect.PostgreSQLDialect

# 로깅 설정
logging:
  level:
    com.dorandoran.chat: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# AI 설정 (환경변수에서 주입)
ai:
  openai:
    api-key: ${OPENAI_API_KEY}
    base-url: ${OPENAI_BASE_URL:https://api.openai.com}
    model: ${OPENAI_MODEL:gpt-4o-mini}
    max-prompt-chars: ${OPENAI_MAX_PROMPT_CHARS:8000}
    max-output-tokens: ${OPENAI_MAX_OUTPUT_TOKENS:800}
    price-per1k-input: ${OPENAI_PRICE_IN_PER1K:0}
    price-per1k-output: ${OPENAI_PRICE_OUT_PER1K:0}

# SpringDoc OpenAPI 설정
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operationsSorter: method
    tagsSorter: alpha
    tryItOutEnabled: true
    displayRequestDuration: true
    showExtensions: true
    showCommonExtensions: true

# Actuator 설정은 application-docker.yml에서 관리
